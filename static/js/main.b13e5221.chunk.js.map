{"version":3,"sources":["components/Header.js","components/BankList.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Fragment","className","BankList","useState","searchText","setSearchText","banks","getBank","loading","setLoading","error","message","setError","useEffect","fetchBankData","getDataBySearchKey","searchKey","a","fetch","response","json","resData","data","console","log","debounced","useDebouncedCallback","type","placeholder","onChange","e","target","value","onKeyPress","key","onClick","length","map","bank","i","BankName","Type","BankShortCode","Founded","Headquarters","Website","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAgBeA,EAdA,WACb,OACE,cAAC,IAAMC,SAAP,UACE,yBAAQC,UAAU,aAAlB,UACE,8CACA,8I,sCCoGOC,EAvGE,WAAO,IAAD,EACeC,mBAAS,IADxB,mBACdC,EADc,KACFC,EADE,OAEIF,mBAAS,IAFb,mBAEdG,EAFc,KAEPC,EAFO,OAGSJ,oBAAS,GAHlB,mBAGdK,EAHc,KAGLC,EAHK,OAIKN,mBAAS,CAAEO,OAAO,EAAOC,QAAS,KAJvC,mBAIdD,EAJc,KAIPE,EAJO,KAMrBC,qBAAU,WACRC,EAAc,MACb,IAEH,IAAMC,EAAqB,WACzBD,EAAcV,IAGVU,EAAa,uCAAG,WAAOE,GAAP,iBAAAC,EAAA,6DACpBR,GAAW,GADS,kBAGGS,MAAM,GAAD,OAnBf,0DAmBe,qBAAyBF,IAHjC,cAGdG,EAHc,gBAIEA,EAASC,OAJX,QAIdC,EAJc,QAKNC,MACVf,EAAQc,EAAQC,MAElBb,GAAW,GARO,kDAUlBc,QAAQC,IAAI,aAAc,KAAMb,SAChCC,EAAS,CAAEF,OAAO,EAAMC,QAAS,KAAMA,UACvCF,GAAW,GAZO,0DAAH,sDAgBbgB,EAAYC,aAAqB,WACrCX,MACC,KAEH,OACE,cAAC,IAAMf,SAAP,UACGU,EAAMA,MACL,qBAAKT,UAAU,QAAf,SAAwBS,EAAMC,UAE9B,eAAC,IAAMX,SAAP,WACE,sBAAKC,UAAU,iBAAf,UACE,uBACE0B,KAAK,OACLC,YAAY,sBACZC,SAAU,SAACC,GACTzB,EAAcyB,EAAEC,OAAOC,OACvBP,KAEFQ,WAAY,SAACH,GACG,UAAVA,EAAEI,KACJnB,OAIN,wBAAQoB,QAASpB,EAAjB,uBAGF,qBAAKd,UAAU,oBAAf,SACGO,EACC,qBAAKP,UAAU,kBAAf,SACE,6CAEAK,EAAM8B,OAAS,EACjB9B,EAAM+B,KAAI,SAACC,EAAMC,GAAP,OACR,qBAAKtC,UAAU,WAAf,SACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,sBAAMA,UAAU,KAAhB,mBACA,sBAAMA,UAAU,KAAhB,SAAsBqC,EAAKE,cAE7B,sBAAKvC,UAAU,gBAAf,UACE,sBAAMA,UAAU,KAAhB,mBACA,sBAAMA,UAAU,KAAhB,SAAsBqC,EAAKG,UAE7B,sBAAKxC,UAAU,gBAAf,UACE,sBAAMA,UAAU,KAAhB,yBACA,sBAAMA,UAAU,KAAhB,SAAsBqC,EAAKI,mBAE7B,sBAAKzC,UAAU,gBAAf,UACE,sBAAMA,UAAU,KAAhB,sBACA,sBAAMA,UAAU,KAAhB,SAAsBqC,EAAKK,aAE7B,sBAAK1C,UAAU,gBAAf,UACE,sBAAMA,UAAU,KAAhB,2BACA,sBAAMA,UAAU,KAAhB,SAAsBqC,EAAKM,kBAE7B,sBAAK3C,UAAU,gBAAf,UACE,sBAAMA,UAAU,KAAhB,sBACA,sBAAMA,UAAU,KAAhB,SAAsBqC,EAAKO,iBAxBFN,MA8BjC,qBAAKtC,UAAU,gBAAf,mCCrFC6C,MATf,WACE,OACE,sBAAK7C,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCIS8C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b13e5221.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <header className=\"App-header\">\r\n        <h1>BD Bank List</h1>\r\n        <p>\r\n          Banks in Bangladesh fall under the supervision of the Bangladesh Bank,\r\n          the central bank of the country.\r\n        </p>\r\n      </header>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDebouncedCallback } from \"use-debounce\";\r\nconst BANK_API = \"https://sheltered-peak-03802.herokuapp.com/api/banklist\";\r\n\r\nconst BankList = () => {\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [banks, getBank] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState({ error: false, message: \"\" });\r\n\r\n  useEffect(() => {\r\n    fetchBankData(\"\");\r\n  }, []);\r\n\r\n  const getDataBySearchKey = () => {\r\n    fetchBankData(searchText);\r\n  };\r\n\r\n  const fetchBankData = async (searchKey) => {\r\n    setLoading(true);\r\n    try {\r\n      let response = await fetch(`${BANK_API}?BankName=${searchKey}`);\r\n      let resData = await response.json();\r\n      if (resData.data) {\r\n        getBank(resData.data);\r\n      }\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(\"error ===>\", error.message);\r\n      setError({ error: true, message: error.message });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const debounced = useDebouncedCallback(() => {\r\n    getDataBySearchKey();\r\n  }, 600);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {error.error ? (\r\n        <div className=\"error\">{error.message}</div>\r\n      ) : (\r\n        <React.Fragment>\r\n          <div className=\"search-section\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search by bank name\"\r\n              onChange={(e) => {\r\n                setSearchText(e.target.value);\r\n                debounced();\r\n              }}\r\n              onKeyPress={(e) => {\r\n                if (e.key === \"Enter\") {\r\n                  getDataBySearchKey();\r\n                }\r\n              }}\r\n            />\r\n            <button onClick={getDataBySearchKey}>&#8981;</button>\r\n          </div>\r\n\r\n          <div className=\"Bank-list-section\">\r\n            {loading ? (\r\n              <div className=\"loading-section\">\r\n                <p>Loading...</p>\r\n              </div>\r\n            ) : banks.length > 0 ? (\r\n              banks.map((bank, i) => (\r\n                <div className=\"Bank-col\" key={i}>\r\n                  <div className=\"Bank-card\">\r\n                    <div className=\"property_text\">\r\n                      <span className=\"pn\">Name:</span>\r\n                      <span className=\"pp\">{bank.BankName}</span>\r\n                    </div>\r\n                    <div className=\"property_text\">\r\n                      <span className=\"pn\">Type:</span>\r\n                      <span className=\"pp\">{bank.Type}</span>\r\n                    </div>\r\n                    <div className=\"property_text\">\r\n                      <span className=\"pn\">Short Code:</span>\r\n                      <span className=\"pp\">{bank.BankShortCode}</span>\r\n                    </div>\r\n                    <div className=\"property_text\">\r\n                      <span className=\"pn\">Founded:</span>\r\n                      <span className=\"pp\">{bank.Founded}</span>\r\n                    </div>\r\n                    <div className=\"property_text\">\r\n                      <span className=\"pn\">Headquarters:</span>\r\n                      <span className=\"pp\">{bank.Headquarters}</span>\r\n                    </div>\r\n                    <div className=\"property_text\">\r\n                      <span className=\"pn\">Website:</span>\r\n                      <span className=\"pp\">{bank.Website}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <div className=\"no-data-found\">No Data Found</div>\r\n            )}\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default BankList;\r\n","import \"./App.css\";\r\nimport Header from \"./components/Header\";\r\nimport BankList from \"./components/BankList\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <BankList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}